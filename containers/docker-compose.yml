version: '3.8'

services:
  web:
    container_name: fastapi
    build:
      context: .
      dockerfile: app/fastapi/Dockerfile
    expose:
      - 80
    environment:
      - DATABASE_URL=postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@postgresdb:5432/$POSTGRES_DB 
      - MLFLOW_S3_ENDPOINT_URL=$MLFLOW_S3_ENDPOINT_URL
      - MLFLOW_TRACKING_URI=${MLFLOW_TRACKING_URI}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - BACKEND_STORE_URI="mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@mysqldb:3306/${MYSQL_DATABASE}" 
    depends_on:
      - postgresdb



  postgresdb:
    container_name: fastapi_db
    image: postgres:13-alpine
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data/
    expose:
      - 5432
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB

  minio:
    restart: always
    image: minio/minio
    container_name: mlflow_s3
    expose:
      - 9000
      - 9001
    command: server /data --console-address ':9001' --address ':9000'
    environment:
      - MINIO_ROOT_USER=${AWS_ACCESS_KEY_ID}
      - MINIO_ROOT_PASSWORD=${AWS_SECRET_ACCESS_KEY}
      - MINIO_BROWSER_REDIRECT_URL=$MINIO_BROWSER_REDIRECT_URL
      - MINIO_SERVER_URL=$MINIO_SERVER_URL
    volumes:
      - minio_data:/data

  mc:
    image: minio/mc
    depends_on:
      - minio
    container_name: mc
    env_file:
      - .env
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add minio ${MINIO_SERVER_URL} ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY}) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc mb minio/mlflow;
      /usr/bin/mc policy set download minio/mlflow;
      exit 0;
      "      
      
      #volumes:
      #- ./wait-for-it.sh:/tmp/wait-for-it.sh

  mysqldb:
    restart: always
    image: mysql:8.0.32-debian
    container_name: mlflow_db
    expose:
      - 3306
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - getaround_dbdata:/var/lib/mysql:rw


  mlflow:
    restart: always
    build: ./app/mlflow
    container_name: mlflow_server
    depends_on:
      - mc
      - mysqldb
    expose:
      - 5000
    environment:
      - MLFLOW_S3_ENDPOINT_URL=$MLFLOW_S3_ENDPOINT_URL
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    command: mlflow server --backend-store-uri mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@mysqldb:3306/${MYSQL_DATABASE} --default-artifact-root s3://mlflow/ --serve-artifacts --host 0.0.0.0


  streamlit:
    build: ./app/streamlit
    container_name: streamlit_app
    restart: always
    expose:
      - 8501
    command: streamlit run app.py


volumes:
  getaround_dbdata:
  minio_data:
  postgres_data_prod:
